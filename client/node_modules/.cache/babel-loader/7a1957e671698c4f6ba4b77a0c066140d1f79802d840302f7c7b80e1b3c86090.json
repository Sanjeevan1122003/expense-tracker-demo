{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanje\\\\Desktop\\\\expense-tracker-demo\\\\client\\\\src\\\\pages\\\\dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useCallback } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/pagesstyle.css\";\n\n// const Dashboard = ({ email }) => {\n//   const [userData, setUserData] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const [formData, setFormData] = useState({\n//     amount: \"\",\n//     category: \"\",\n//     description: \"\",\n//     email: email || \"\"\n//   });\n\n//   const [deleteId, setDeleteId] = useState(\"\");\n\n//   // Memoized fetchUserData to prevent re-creation\n//   const fetchUserData = useCallback(() => {\n//     axios.get(`http://localhost:5000/dashboard?email=${email}`)\n//       .then(response => setUserData(response.data))\n//       .catch(() => setError(\"Failed to load data.\"));\n//   }, [email]);\n\n//   useEffect(() => {\n//     if (!email) {\n//       navigate(\"/\");\n//     }\n//     fetchUserData();\n//   }, [email, navigate, fetchUserData]);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleAddExpense = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/add-expense\", formData);\n//       alert(response.data.message || \"Add Data Successfull!\");\n//       setFormData({ amount: \"\", category: \"\", description: \"\", email: email });\n//       fetchUserData(); // Refresh data\n//     } catch (error) {\n//       console.error(\"Error adding expense:\", error);\n//       alert(\"Failed to add expense. Try again!\");\n//     }\n//   };\n\n//   const handleDeleteExpense = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.delete(`http://localhost:5000/delete-expense/${deleteId}`);\n//       alert(response.data.message);\n//       setDeleteId(\"\");\n//       fetchUserData(); // Refresh data\n//     } catch (error) {\n//       console.error(\"Error deleting expense:\", error);\n//       alert(\"Failed to delete expense. Try again!\");\n//     }\n//   };\n\n//   const handleDownloadPDF = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/export-pdf?email=${email}`);\n//       const blob = await response.blob();\n//       const url = window.URL.createObjectURL(blob);\n//       const a = document.createElement(\"a\");\n//       a.href = url;\n//       a.download = `ExpenseReport_${userData?.username}.pdf`;\n//       document.body.appendChild(a);\n//       a.click();\n//       document.body.removeChild(a);\n//     } catch (error) {\n//       console.error(\"Error downloading PDF:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard-content\">\n//       {userData ? (\n//         <>\n//           <div className=\"dashboard-nav-container\">\n//             <nav className=\"dashboard-navbar\">\n//               <div className=\"dashboard-logo\">\n//                 <img src=\"https://github.com/Sanjeevan1122003/expense-tracker-demo/blob/main/dashboard_logo.png?raw=true\" alt=\"Logo\" className=\"logo\" />\n//               </div>\n//               <div className=\"dashboard-buttons\">\n//                 <button className=\"dashboard-button\"><a href=\"#sectionHome\">Home</a></button>\n//                 <button className=\"dashboard-button\"><a href=\"#sectionExpense\">Expenses</a></button>\n//                 <button className=\"dashboard-button\"><a href=\"#sectionData\">Your Data</a></button>\n//               </div>\n//             </nav>\n//           </div>\n//           {error && <p className=\"error-message\">{error}</p>}\n//           <section id=\"sectionHome\">\n//             <div className=\"home-content\">\n//               <div className=\"home-card\">\n//                 <div className=\"home-card-description\">\n//                   <h1 className=\"home-title\">Hi, <span className=\"highlights\">{userData.username}</span></h1>\n//                   <h2 className=\"home-title\">Welcome to <span className=\"highlights\">Expense Tracker</span> Dashboard</h2>\n//                   <h3 className=\"home-title\">Track your Expenses Easily</h3>\n//                   <p className=\"home-description\">Manage your daily expenses efficiently and take control of your\n//                     financial health.</p>\n//                   <ul className=\"home-description\">\n//                     <li>âž• Add your daily expenses</li>\n//                     <li>ðŸ“ˆ View spending insights</li>\n//                     <li>ðŸ’° Set monthly budgets</li>\n//                     <li>ðŸ”” Get expense alerts</li>\n//                   </ul>\n//                 </div>\n//                 <div className=\"home-card-image\">\n//                   <img src=\"https://github.com/Sanjeevan1122003/expense-tracker-demo/blob/main/expence_tracker_home_page.png?raw=true\" alt=\"Logo\" className=\"home-image\" />\n//                 </div>\n//               </div>\n//             </div>\n//           </section>\n\n//           <section id=\"sectionExpense\">\n//             <div className=\"expense-content\">\n//               <div className=\"expense-cards\">\n//                 <div className=\"expense-card\">\n//                   <p className=\"expense-card-title\">Add Expense</p>\n//                   <div className=\"expense-card-from\">\n//                     <form onSubmit={handleAddExpense}>\n//                       <label htmlFor=\"amount\">Enter the cost(amount): </label><br></br>\n//                       <input type=\"number\" name=\"amount\" placeholder=\"Enter amount\" required value={formData.amount} onChange={handleChange} />\n//                       <label htmlFor=\"select\">Category(income / expense): </label><br></br>\n//                       <select name=\"category\" required value={formData.category} onChange={handleChange}>\n//                         <option value=\"\">Select Category</option>\n//                         <option value=\"Income\">Income</option>\n//                         <option value=\"Expense\">Expense</option>\n//                       </select><br></br>\n//                       <label htmlFor=\"description\">Enter the description(detail of data): </label><br></br>\n//                       <input type=\"text\" name=\"description\" placeholder=\"Enter details\" value={formData.description} onChange={handleChange} />\n//                       <p><strong className=\"highlights\">Note:</strong> Once you add the data you can't change it, So fill the details carefully</p>\n//                       <div className=\"button-container button-add\">\n//                         <button type=\"submit\">Add Expense</button>\n//                       </div>\n//                     </form>\n//                   </div>\n//                 </div>\n//                 <div className=\"expense-card\">\n//                   <p className=\"expense-card-title\">Delete Expense</p>\n//                   <div className=\"expense-card-from\">\n//                     <form onSubmit={handleDeleteExpense}>\n//                       <label htmlFor=\"id\">Enter the expense Id:</label><br></br>\n//                       <input type=\"number\" name=\"id\" placeholder=\"Enter Expense ID\" required value={deleteId} onChange={(e) => setDeleteId(e.target.value)} />\n//                       <p>You can see the your data in the below table and get Id for the data you want to delete</p>\n//                       <p><strong className=\"highlights\">Note:</strong> Once you delete the data you can't recover it, So fill the detail carefully</p>\n//                       <div className=\"button-container button-delete\">\n//                         <button type=\"submit\">Delete Expense</button>\n//                       </div>\n//                     </form>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </section>\n\n//           <section id=\"sectionData\">\n//             <div className=\"data-content\">\n//               <h3>Total Income: <b>RS: {userData.totalIncome}</b></h3>\n//               <h3>Total Expense: <b>RS: {userData.totalExpense}</b></h3>\n//               <button onClick={handleDownloadPDF}>Download PDF</button>\n//               <table>\n//                 <thead>\n//                   <tr>\n//                     <th>ID</th>\n//                     <th>Category</th>\n//                     <th>Description</th>\n//                     <th>Amount</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {userData.expenses.map((exp) => (\n//                     <tr key={exp.id}>\n//                       <td>{exp.id}</td>\n//                       <td>{exp.category}</td>\n//                       <td>{exp.description}</td>\n//                       <td>{exp.amount}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </section>\n\n//           <div className=\"footer\">\n//             <p>&copy; 2025 Expense Tracker</p>\n//           </div>\n//         </>\n//       ) : <p>Loading...</p>}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  email\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    amount: \"\",\n    category: \"\",\n    description: \"\",\n    email: email || \"\"\n  });\n  const [deleteId, setDeleteId] = useState(\"\");\n\n  // Memoized fetchUserData to prevent re-creation\n  const fetchUserData = useCallback(() => {\n    axios.get(`http://localhost:5000/dashboard?email=${email}`).then(response => setUserData(response.data)).catch(() => setError(\"Failed to load data.\"));\n  }, [email]);\n  useEffect(() => {\n    if (!email) {\n      navigate(\"/\");\n      return;\n    }\n    fetchUserData(); // Fetch data on mount\n  }, [email, navigate, fetchUserData]); // Add fetchUserData as a dependency\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddExpense = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/add-expense\", formData);\n      alert(response.data.message || \"Add Data Successfull!\");\n      setFormData({\n        amount: \"\",\n        category: \"\",\n        description: \"\",\n        email: email\n      });\n      fetchUserData(); // Refresh data\n    } catch (error) {\n      console.error(\"Error adding expense:\", error);\n      alert(\"Failed to add expense. Try again!\");\n    }\n  };\n  const handleDeleteExpense = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.delete(`http://localhost:5000/delete-expense/${deleteId}`);\n      alert(response.data.message);\n      setDeleteId(\"\");\n      fetchUserData(); // Refresh data\n    } catch (error) {\n      console.error(\"Error deleting expense:\", error);\n      alert(\"Failed to delete expense. Try again!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }, this), userData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hi, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: userData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Income: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"RS: \", userData.totalIncome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Expense: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"RS: \", userData.totalExpense]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Expense Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userData.expenses.map(exp => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exp.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exp.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exp.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"RS: \", exp.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this)]\n          }, exp.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"sectionExpense\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"expense-card-title\",\n                children: \"Add Expense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"expense-card-form\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleAddExpense,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"amount\",\n                    children: \"Enter the cost (amount): \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 102\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"amount\",\n                    placeholder: \"Enter amount\",\n                    required: true,\n                    value: formData.amount,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"category\",\n                    children: \"Category (Income / Expense): \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 108\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"category\",\n                    required: true,\n                    value: formData.category,\n                    onChange: handleChange,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Income\",\n                      children: \"Income\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Expense\",\n                      children: \"Expense\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 54\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"description\",\n                    children: \"Enter the description: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 105\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"description\",\n                    placeholder: \"Enter details\",\n                    value: formData.description,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      className: \"highlights\",\n                      children: \"Note:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 48\n                    }, this), \" Once you add the data, you can't change it. Fill the details carefully.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"button-container button-add\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      children: \"Add Expense\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"expense-card-title\",\n                children: \"Delete Expense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"expense-card-form\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleDeleteExpense,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"id\",\n                    children: \"Enter the expense ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 94\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"id\",\n                    placeholder: \"Enter Expense ID\",\n                    required: true,\n                    value: deleteId,\n                    onChange: e => setDeleteId(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      className: \"highlights\",\n                      children: \"Note:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 48\n                    }, this), \" Once you delete the data, you can't recover it. Be careful!\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"button-container button-delete\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      children: \"Delete Expense\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"sMzJSK8r3lU5xtpd/BcEBPOYXyk=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","useCallback","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","email","_s","userData","setUserData","error","setError","navigate","formData","setFormData","amount","category","description","deleteId","setDeleteId","fetchUserData","get","then","response","data","catch","handleChange","e","target","name","value","handleAddExpense","preventDefault","post","alert","message","console","handleDeleteExpense","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","totalIncome","totalExpense","expenses","map","exp","id","onSubmit","htmlFor","type","placeholder","required","onChange","_c","$RefreshReg$"],"sources":["C:/Users/sanje/Desktop/expense-tracker-demo/client/src/pages/dashboard.js"],"sourcesContent":["// import React, { useEffect, useState, useCallback } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import \"../styles/pagesstyle.css\";\r\n\r\n// const Dashboard = ({ email }) => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     amount: \"\",\r\n//     category: \"\",\r\n//     description: \"\",\r\n//     email: email || \"\"\r\n//   });\r\n\r\n//   const [deleteId, setDeleteId] = useState(\"\");\r\n\r\n//   // Memoized fetchUserData to prevent re-creation\r\n//   const fetchUserData = useCallback(() => {\r\n//     axios.get(`http://localhost:5000/dashboard?email=${email}`)\r\n//       .then(response => setUserData(response.data))\r\n//       .catch(() => setError(\"Failed to load data.\"));\r\n//   }, [email]);\r\n\r\n//   useEffect(() => {\r\n//     if (!email) {\r\n//       navigate(\"/\");\r\n//     }\r\n//     fetchUserData();\r\n//   }, [email, navigate, fetchUserData]);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleAddExpense = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/add-expense\", formData);\r\n//       alert(response.data.message || \"Add Data Successfull!\");\r\n//       setFormData({ amount: \"\", category: \"\", description: \"\", email: email });\r\n//       fetchUserData(); // Refresh data\r\n//     } catch (error) {\r\n//       console.error(\"Error adding expense:\", error);\r\n//       alert(\"Failed to add expense. Try again!\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteExpense = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.delete(`http://localhost:5000/delete-expense/${deleteId}`);\r\n//       alert(response.data.message);\r\n//       setDeleteId(\"\");\r\n//       fetchUserData(); // Refresh data\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting expense:\", error);\r\n//       alert(\"Failed to delete expense. Try again!\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDownloadPDF = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/export-pdf?email=${email}`);\r\n//       const blob = await response.blob();\r\n//       const url = window.URL.createObjectURL(blob);\r\n//       const a = document.createElement(\"a\");\r\n//       a.href = url;\r\n//       a.download = `ExpenseReport_${userData?.username}.pdf`;\r\n//       document.body.appendChild(a);\r\n//       a.click();\r\n//       document.body.removeChild(a);\r\n//     } catch (error) {\r\n//       console.error(\"Error downloading PDF:\", error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <div className=\"dashboard-content\">\r\n//       {userData ? (\r\n//         <>\r\n//           <div className=\"dashboard-nav-container\">\r\n//             <nav className=\"dashboard-navbar\">\r\n//               <div className=\"dashboard-logo\">\r\n//                 <img src=\"https://github.com/Sanjeevan1122003/expense-tracker-demo/blob/main/dashboard_logo.png?raw=true\" alt=\"Logo\" className=\"logo\" />\r\n//               </div>\r\n//               <div className=\"dashboard-buttons\">\r\n//                 <button className=\"dashboard-button\"><a href=\"#sectionHome\">Home</a></button>\r\n//                 <button className=\"dashboard-button\"><a href=\"#sectionExpense\">Expenses</a></button>\r\n//                 <button className=\"dashboard-button\"><a href=\"#sectionData\">Your Data</a></button>\r\n//               </div>\r\n//             </nav>\r\n//           </div>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n//           <section id=\"sectionHome\">\r\n//             <div className=\"home-content\">\r\n//               <div className=\"home-card\">\r\n//                 <div className=\"home-card-description\">\r\n//                   <h1 className=\"home-title\">Hi, <span className=\"highlights\">{userData.username}</span></h1>\r\n//                   <h2 className=\"home-title\">Welcome to <span className=\"highlights\">Expense Tracker</span> Dashboard</h2>\r\n//                   <h3 className=\"home-title\">Track your Expenses Easily</h3>\r\n//                   <p className=\"home-description\">Manage your daily expenses efficiently and take control of your\r\n//                     financial health.</p>\r\n//                   <ul className=\"home-description\">\r\n//                     <li>âž• Add your daily expenses</li>\r\n//                     <li>ðŸ“ˆ View spending insights</li>\r\n//                     <li>ðŸ’° Set monthly budgets</li>\r\n//                     <li>ðŸ”” Get expense alerts</li>\r\n//                   </ul>\r\n//                 </div>\r\n//                 <div className=\"home-card-image\">\r\n//                   <img src=\"https://github.com/Sanjeevan1122003/expense-tracker-demo/blob/main/expence_tracker_home_page.png?raw=true\" alt=\"Logo\" className=\"home-image\" />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </section>\r\n\r\n//           <section id=\"sectionExpense\">\r\n//             <div className=\"expense-content\">\r\n//               <div className=\"expense-cards\">\r\n//                 <div className=\"expense-card\">\r\n//                   <p className=\"expense-card-title\">Add Expense</p>\r\n//                   <div className=\"expense-card-from\">\r\n//                     <form onSubmit={handleAddExpense}>\r\n//                       <label htmlFor=\"amount\">Enter the cost(amount): </label><br></br>\r\n//                       <input type=\"number\" name=\"amount\" placeholder=\"Enter amount\" required value={formData.amount} onChange={handleChange} />\r\n//                       <label htmlFor=\"select\">Category(income / expense): </label><br></br>\r\n//                       <select name=\"category\" required value={formData.category} onChange={handleChange}>\r\n//                         <option value=\"\">Select Category</option>\r\n//                         <option value=\"Income\">Income</option>\r\n//                         <option value=\"Expense\">Expense</option>\r\n//                       </select><br></br>\r\n//                       <label htmlFor=\"description\">Enter the description(detail of data): </label><br></br>\r\n//                       <input type=\"text\" name=\"description\" placeholder=\"Enter details\" value={formData.description} onChange={handleChange} />\r\n//                       <p><strong className=\"highlights\">Note:</strong> Once you add the data you can't change it, So fill the details carefully</p>\r\n//                       <div className=\"button-container button-add\">\r\n//                         <button type=\"submit\">Add Expense</button>\r\n//                       </div>\r\n//                     </form>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"expense-card\">\r\n//                   <p className=\"expense-card-title\">Delete Expense</p>\r\n//                   <div className=\"expense-card-from\">\r\n//                     <form onSubmit={handleDeleteExpense}>\r\n//                       <label htmlFor=\"id\">Enter the expense Id:</label><br></br>\r\n//                       <input type=\"number\" name=\"id\" placeholder=\"Enter Expense ID\" required value={deleteId} onChange={(e) => setDeleteId(e.target.value)} />\r\n//                       <p>You can see the your data in the below table and get Id for the data you want to delete</p>\r\n//                       <p><strong className=\"highlights\">Note:</strong> Once you delete the data you can't recover it, So fill the detail carefully</p>\r\n//                       <div className=\"button-container button-delete\">\r\n//                         <button type=\"submit\">Delete Expense</button>\r\n//                       </div>\r\n//                     </form>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </section>\r\n\r\n//           <section id=\"sectionData\">\r\n//             <div className=\"data-content\">\r\n//               <h3>Total Income: <b>RS: {userData.totalIncome}</b></h3>\r\n//               <h3>Total Expense: <b>RS: {userData.totalExpense}</b></h3>\r\n//               <button onClick={handleDownloadPDF}>Download PDF</button>\r\n//               <table>\r\n//                 <thead>\r\n//                   <tr>\r\n//                     <th>ID</th>\r\n//                     <th>Category</th>\r\n//                     <th>Description</th>\r\n//                     <th>Amount</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {userData.expenses.map((exp) => (\r\n//                     <tr key={exp.id}>\r\n//                       <td>{exp.id}</td>\r\n//                       <td>{exp.category}</td>\r\n//                       <td>{exp.description}</td>\r\n//                       <td>{exp.amount}</td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </section>\r\n\r\n//           <div className=\"footer\">\r\n//             <p>&copy; 2025 Expense Tracker</p>\r\n//           </div>\r\n//         </>\r\n//       ) : <p>Loading...</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = ({ email }) => {\r\n    const [userData, setUserData] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const [formData, setFormData] = useState({\r\n        amount: \"\",\r\n        category: \"\",\r\n        description: \"\",\r\n        email: email || \"\"\r\n    });\r\n\r\n    const [deleteId, setDeleteId] = useState(\"\");\r\n\r\n    // Memoized fetchUserData to prevent re-creation\r\n    const fetchUserData = useCallback(() => {\r\n        axios.get(`http://localhost:5000/dashboard?email=${email}`)\r\n            .then(response => setUserData(response.data))\r\n            .catch(() => setError(\"Failed to load data.\"));\r\n    }, [email]);\r\n\r\n    useEffect(() => {\r\n        if (!email) {\r\n            navigate(\"/\");\r\n            return;\r\n        }\r\n\r\n        fetchUserData(); // Fetch data on mount\r\n    }, [email, navigate, fetchUserData]); // Add fetchUserData as a dependency\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleAddExpense = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/add-expense\", formData);\r\n            alert(response.data.message || \"Add Data Successfull!\");\r\n            setFormData({ amount: \"\", category: \"\", description: \"\", email: email });\r\n            fetchUserData(); // Refresh data\r\n        } catch (error) {\r\n            console.error(\"Error adding expense:\", error);\r\n            alert(\"Failed to add expense. Try again!\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteExpense = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.delete(`http://localhost:5000/delete-expense/${deleteId}`);\r\n            alert(response.data.message);\r\n            setDeleteId(\"\");\r\n            fetchUserData(); // Refresh data\r\n        } catch (error) {\r\n            console.error(\"Error deleting expense:\", error);\r\n            alert(\"Failed to delete expense. Try again!\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {userData ? (\r\n                <>\r\n                    <h1>Hi, <span className=\"highlight\">{userData.username}</span></h1>\r\n                    <p>Total Income: <b>RS: {userData.totalIncome}</b></p>\r\n                    <p>Total Expense: <b>RS: {userData.totalExpense}</b></p>\r\n\r\n                    <h2>Expense Details</h2>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Id</th>\r\n                                <th>Category</th>\r\n                                <th>Description</th>\r\n                                <th>Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {userData.expenses.map(exp => (\r\n                                <tr key={exp.id}>\r\n                                    <td>{exp.id}</td>\r\n                                    <td>{exp.category}</td>\r\n                                    <td>{exp.description}</td>\r\n                                    <td>RS: {exp.amount}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <section id=\"sectionExpense\">\r\n                        <div className=\"expense-content\">\r\n                            <div className=\"expense-cards\">\r\n                                <div className=\"expense-card\">\r\n                                    <p className=\"expense-card-title\">Add Expense</p>\r\n                                    <div className=\"expense-card-form\">\r\n                                        <form onSubmit={handleAddExpense}>\r\n                                            <label htmlFor=\"amount\">Enter the cost (amount): </label><br />\r\n                                            <input type=\"number\" name=\"amount\" placeholder=\"Enter amount\" required value={formData.amount} onChange={handleChange} />\r\n\r\n                                            <label htmlFor=\"category\">Category (Income / Expense): </label><br />\r\n                                            <select name=\"category\" required value={formData.category} onChange={handleChange}>\r\n                                                <option value=\"\">Select Category</option>\r\n                                                <option value=\"Income\">Income</option>\r\n                                                <option value=\"Expense\">Expense</option>\r\n                                            </select><br />\r\n\r\n                                            <label htmlFor=\"description\">Enter the description: </label><br />\r\n                                            <input type=\"text\" name=\"description\" placeholder=\"Enter details\" value={formData.description} onChange={handleChange} />\r\n\r\n                                            <p><strong className=\"highlights\">Note:</strong> Once you add the data, you can't change it. Fill the details carefully.</p>\r\n                                            <div className=\"button-container button-add\">\r\n                                                <button type=\"submit\">Add Expense</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"expense-card\">\r\n                                    <p className=\"expense-card-title\">Delete Expense</p>\r\n                                    <div className=\"expense-card-form\">\r\n                                        <form onSubmit={handleDeleteExpense}>\r\n                                            <label htmlFor=\"id\">Enter the expense ID:</label><br />\r\n                                            <input type=\"number\" name=\"id\" placeholder=\"Enter Expense ID\" required value={deleteId} onChange={(e) => setDeleteId(e.target.value)} />\r\n\r\n                                            <p><strong className=\"highlights\">Note:</strong> Once you delete the data, you can't recover it. Be careful!</p>\r\n                                            <div className=\"button-container button-delete\">\r\n                                                <button type=\"submit\">Delete Expense</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </>\r\n            ) : <p>Loading...</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,Q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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}